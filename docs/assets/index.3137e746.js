var t=Object.defineProperty,e=(e,i,s)=>(((e,i,s)=>{i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s})(e,"symbol"!=typeof i?i+"":i,s),s);export function __vite_legacy_guard(){import("data:text/javascript,")}import{f as i,t as s,l as o,e as n,d as a,p as r,u as l,j as c,S as h,a as m,b as d}from"./vendor.5bf4de22.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const i of t)if("childList"===i.type)for(const t of i.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerpolicy&&(e.referrerPolicy=t.referrerpolicy),"use-credentials"===t.crossorigin?e.credentials="include":"anonymous"===t.crossorigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();const p={};var g={canvas:{width:300,height:250},network:{tickMs:50,minLatency1:10,maxLatency1:30,packetLoss1:0,minLatency2:10,maxLatency2:30,packetLoss2:0},serializers:[{name:"json"},{name:"cbor-x"},{name:"msgpackr"}],netcodes:[{name:"p2p-naive",type:"p2p"},{name:"p2p-delayed",type:"p2p"},{name:"cs-lockstep",type:"cs"},{name:"custom",type:"custom"}],players:[{id:1,color:"#483D8B",x:10,y:10,size:20,keyUp:87,keyDown:83,keyLeft:65,keyRight:68},{id:2,color:"#6B8E23",x:270,y:220,size:20,keyUp:38,keyDown:40,keyLeft:37,keyRight:39}],npc:{color:"black"},border:{color:"#708090"},physics:{worldScale:30,strength:10,borderThickness:5}};const f=0,u=1,y=2,S=10,v=20,w=11,k=21,x=12,_=22;class L{constructor(t,e){this.name=t,this.type=e}}const E=g;class C{constructor(){e(this,"_listeners",[])}addEventListener(t){this._listeners.includes(t)||this._listeners.push(t)}removeEventListener(t){const e=this._listeners.indexOf(t);-1!==e&&this._listeners.splice(e,1)}removeListeners(){this._listeners=[]}notify(t){this._listeners.forEach((e=>{e(t)}))}}const b=()=>(new Date).getTime();var I,P;(P=I||(I={})).INFO="INFO",P.WARN="WARN",P.ERROR="ERROR";const T=class{constructor(t,i,s){e(this,"_id"),this.level=t,this.timestamp=i,this.text=s,this._id=T.idCounter++}get id(){return this._id}toString(){const t=new Date;return t.setTime(this.timestamp),`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")} ${this.level.padEnd(5)} ${this.text}`}};let D=T;e(D,"idCounter",0);class G{constructor(){e(this,"_traces",[])}get traces(){return this._traces}log(t,e){this._traces.unshift(new D(t,b(),e))}logInfo(t){this.log(I.INFO,t)}logWarn(t){this.log(I.WARN,t)}logError(t){this.log(I.ERROR,t)}clear(){this._traces=[]}toString(){const t=this._traces.reverse().join("\n");return this._traces.reverse(),t}}class z{constructor(t,e){this.timestamp=t,this.size=e}}class ${constructor(){e(this,"timeIncoming",0),e(this,"sizeIncoming",0),e(this,"timeOutgoing",0),e(this,"sizeOutgoing",0),e(this,"latestTimeIncomingNotified",0),e(this,"latestTimeOutgoingNotified",0),e(this,"_outgoingEmitter",new C),e(this,"_incomingEmitter",new C)}get outgoingEmitter(){return this._outgoingEmitter}get incomingEmitter(){return this._incomingEmitter}logOut(t,e){const i=Math.floor(t/1e3);0===this.timeOutgoing&&(this.timeOutgoing=i),this.timeOutgoing!==i?(this.latestTimeOutgoingNotified=this.timeOutgoing,this._outgoingEmitter.notify(new z(this.timeOutgoing,this.sizeOutgoing)),this.timeOutgoing=i,this.sizeOutgoing=e):this.sizeOutgoing+=e}logIn(t,e){const i=Math.floor(t/1e3);0===this.timeIncoming&&(this.timeIncoming=i),this.timeIncoming!==i?(this.latestTimeIncomingNotified=this.timeIncoming,this._incomingEmitter.notify(new z(this.timeIncoming,this.sizeIncoming)),this.timeIncoming=i,this.sizeIncoming=e):this.sizeIncoming+=e}flush(){this.latestTimeOutgoingNotified!==this.timeOutgoing&&this._outgoingEmitter.notify(new z(this.timeOutgoing,this.sizeOutgoing)),this.latestTimeIncomingNotified!==this.timeIncoming&&this._incomingEmitter.notify(new z(this.timeIncoming,this.sizeIncoming)),this.timeIncoming=0,this.sizeIncoming=0,this.timeOutgoing=0,this.sizeOutgoing=0,this.latestTimeIncomingNotified=0,this.latestTimeOutgoingNotified=0}removeListeners(){this._outgoingEmitter.removeListeners(),this._incomingEmitter.removeListeners()}}class B{constructor(t){e(this,"_trafficlog",new $),e(this,"connections",[]),e(this,"_connectionEmitter",new C),e(this,"_disconnectionEmitter",new C),e(this,"_messageSentEmitter",new C),e(this,"_messageReceivedEmitter",new C),this.log=t}get trafficLog(){return this._trafficlog}get connectionCount(){return this.connections.length}get connectionEmitter(){return this._connectionEmitter}get disconnectionEmitter(){return this._disconnectionEmitter}get messageSentEmitter(){return this._messageSentEmitter}get messageReceivedEmitter(){return this._messageReceivedEmitter}connect(t,e){this.attachListeners(t),this.connections.push(t),t.connect(e),0===e.peerId?this.log.logInfo("Connected to Server"):this.log.logInfo(`Connected to Player ${e.peerId}`)}attachListeners(t){t.connectionEmitter.addEventListener((t=>{this._connectionEmitter.notify(t)})),t.disconnectionEmitter.addEventListener((t=>{this._disconnectionEmitter.notify(t)})),t.messageReceivedEmitter.addEventListener((t=>{this._messageReceivedEmitter.notify(t)})),t.messageSentEmitter.addEventListener((t=>{this._messageSentEmitter.notify(t)}))}findConnection(t){return this.connections.find((e=>e.peer.peerId===t))}closeConnections(){this.connections.forEach((t=>{t.close(),0===t.peer.peerId?this.log.logInfo("Disconnected from Server"):this.log.logInfo(`Disconnected from Player ${t.peer.peerId}`),this._disconnectionEmitter.notify(t)})),this.connections=[]}removeListeners(){this._connectionEmitter.removeListeners(),this._disconnectionEmitter.removeListeners(),this._messageSentEmitter.removeListeners(),this._messageReceivedEmitter.removeListeners()}broadcast(t){this.connections.forEach((e=>{e.send(t)}))}send(t,e){var i;null==(i=this.findConnection(t))||i.send(e)}}class R{constructor(t,i,s,o){e(this,"_closed",!0),e(this,"_peer"),e(this,"_minLatency",0),e(this,"_maxLatency",0),e(this,"_packetLoss",0),e(this,"_totalSent",0),e(this,"_totalLost",0),e(this,"_connectionEmitter",new C),e(this,"_disconnectionEmitter",new C),e(this,"_messageSentEmitter",new C),e(this,"_messageReceivedEmitter",new C),this.intf=t,this.peerId=i,this.log=s,this.serializer=o}get connectionEmitter(){return this._connectionEmitter}get disconnectionEmitter(){return this._disconnectionEmitter}get messageSentEmitter(){return this._messageSentEmitter}get messageReceivedEmitter(){return this._messageReceivedEmitter}get peer(){return this._peer}set minLatency(t){this._minLatency=t}set maxLatency(t){this._maxLatency=t}set packetLoss(t){this._packetLoss=t}connect(t){this._peer=t,this._connectionEmitter.notify(t),this._closed=!1}send(t){if(this._closed)return;if(t.timestampOrigin=b(),t.origin=this.peerId,t.destination=this._peer.peerId,this._packetLoss>0&&this._totalLost+1<this._totalSent*this._packetLoss/100)return this.log.logWarn(`Message for tick ${t.tick} lost`),void this._totalLost++;this._totalSent++;const e=this.serializer.encode(t);var i,s;this.intf.trafficLog.logOut(t.timestampOrigin,e.byteLength),this._messageSentEmitter.notify(t),0===this.maxLatency?this._peer.receive(e):setTimeout((()=>{this._peer.receive(e)}),(i=this._minLatency,s=this._maxLatency,Math.floor(Math.random()*(s-i+1)+i)))}receive(t){if(this._closed)return;const e=this.serializer.decode(t);e.timestampDestination=b(),this.intf.trafficLog.logIn(e.timestampDestination,t.byteLength),this._messageReceivedEmitter.notify(e)}close(){this._closed=!0}}class O{constructor(t,e,i){this.tick=t,this.playerId=e,this.value=i}}class M{static clone(t,e){return new O(t.tick+(e?1:0),t.playerId,t.value)}static cloneArray(t){return t.map((t=>M.clone(t,!1)))}static toString(t){return`P${t.playerId}:${t.value}`}static arrayToString(t){let e="";return t.forEach((t=>{e+=`P${t.playerId}:${t.value} `})),e}static toFullString(t){return`tick ${t.tick} P${t.playerId}:${t.value}`}}class Y{constructor(t,e,i){this.id=t,this.x=e,this.y=i}toString(){return`P${this.id} x=${this.x} y=${this.y}`}}class U{constructor(t,e){this.playerId=t,this.value=e}toString(){return`P${this.playerId}:${this.value}`}}class X{constructor(t,e,i){this.tick=t,this.players=e,this.commands=i}toString(){return`tick: ${this.tick}\n  ${this.players.join("\n  ")}\n  ${this.commands.length>0?"Commands:":""} ${this.commands.join(" ")}`}}class N{constructor(t,e){this.tick=t,this.commands=e}}const A=class{constructor(t,i,s){e(this,"kind",A.KIND_UNDEFINED),e(this,"timestampOrigin"),e(this,"timestampDestination"),this.tick=t,this.origin=i,this.destination=s}};let W=A;e(W,"KIND_COMMAND","CMD"),e(W,"KIND_GAMESTATE","GST"),e(W,"KIND_UNDEFINED","");class F extends W{constructor(t,i,s){super(t.tick,i,s),e(this,"command"),this.kind=W.KIND_COMMAND,this.command=t}}class H extends W{constructor(t,i,s){super(t.tick,i,s),e(this,"gameState"),this.kind=W.KIND_GAMESTATE,this.gameState=t}}class j{constructor(t,e,i,s,o,n,a,r,l){this.id=t,this.isStatic=e,this.posX=i,this.posY=s,this.velX=o,this.velY=n,this.width=a,this.height=r,this.color=l}}class V extends N{constructor(t,e,i){super(t,e),this.tick=t,this.commands=e,this.bodies=i}}class K{static bodyFromPlayer(t,e){return t.bodies.find((t=>t.id===e))}static toString(t){let e="";return t.bodies.forEach((t=>{t.isStatic||(e+=`    P${t.id} x=${t.posX*E.physics.worldScale} y=${t.posY*E.physics.worldScale}\n`)})),`\nGameState tick: ${t.tick}\n  bodies:\n${e}  ${t.commands.length>0?"commands    ":""}${M.arrayToString(t.commands)}`}static clone(t){const e=[];t.bodies.forEach((t=>{e.push(class{static clone(t){return new j(t.id,t.isStatic,t.posX,t.posY,t.velX,t.velY,t.width,t.height,t.color)}}.clone(t))}));return new V(t.tick,M.cloneArray(t.commands),t.bodies)}static toLog(t){const e=[];t.bodies.forEach((t=>{t.isStatic||e.push(new Y(t.id,t.posX*E.physics.worldScale,t.posY*E.physics.worldScale))})),e.sort(((t,e)=>t.id>e.id?1:-1));const i=[];return t.commands.forEach((t=>{i.push(new U(t.playerId,t.value))})),i.sort(((t,e)=>t.playerId>e.playerId?1:-1)),new X(t.tick,e,i)}}class q extends N{constructor(t,e,i,s){super(t,e),this.tick=t,this.commands=e,this.world=i,this.bodies=s}}class J extends class{static incTick(t){t.tick++}static commandFromPlayer(t,e){return t.commands.find((t=>t.playerId===e))}static clearCommands(t){t.commands=[]}}{static extractBodies(t){const e=[];for(let i=t.getBodyList();i;i=i.getNext())e.unshift(i);return e}static bodyFromPlayer(t,e){return t.bodies.find((t=>t.getUserData().id===e))}static toString(t){let e="";return t.bodies.forEach((t=>{!t.isStatic()&&t.getUserData()&&(e+=`    P${t.getUserData().id} x=${t.getPosition().x*E.physics.worldScale} y=${t.getPosition().y*E.physics.worldScale}\n`)})),`\nGameState tick: ${t.tick}\n  bodies:\n${e}  ${t.commands.length>0?"commands:":""}\n    ${M.arrayToString(t.commands)}`}static clone(t){const e=J.cloneWorld(t.world,t.bodies);return new q(t.tick,M.cloneArray(t.commands),e,J.extractBodies(e))}static cloneWorld(t,e){const o=i(s(t)),n=[];for(let i=o.getBodyList();i;i=i.getNext())n.unshift(i);for(let[i,s]of n.entries())null!==s&&s.setUserData(e[i].getUserData());return o}static toLog(t){const e=[];t.bodies.forEach((t=>{if(!t.isStatic()&&t.getUserData()){let i=t.getUserData();e.push(new Y(i.id,t.getPosition().x*E.physics.worldScale,t.getPosition().y*E.physics.worldScale))}})),e.sort(((t,e)=>t.id>e.id?1:-1));const i=[];return t.commands.forEach((t=>{i.push(new U(t.playerId,t.value))})),i.sort(((t,e)=>t.playerId>e.playerId?1:-1)),new X(t.tick,e,i)}static buildSimpleGameState(t){const e=[];return t.bodies.forEach((t=>{if(!t.isStatic()){let i=t.getUserData();const s=new j(i.id,!1,t.getPosition().x,t.getPosition().y,t.getLinearVelocity().x,t.getLinearVelocity().y,i.size,i.size,i.color);e.push(s)}if(t.isStatic()){const i=new j(-1,!0,t.getPosition().x,t.getPosition().y,t.getLinearVelocity().x,t.getLinearVelocity().y,t.getUserData().width,t.getUserData().height,E.border.color);e.push(i)}})),new V(t.tick,[],e)}}class Q{constructor(t,i,s){e(this,"_gameState"),e(this,"_startTime"),e(this,"_tickMs"),e(this,"_currentTick"),this.log=t,this.net=i,this.gameStateMachine=s,this._startTime=0,this._tickMs=50,this._currentTick=0,this.net.messageReceivedEmitter.addEventListener((t=>{t.kind===W.KIND_COMMAND?this.remoteCommandReceived(t.command):t.kind===W.KIND_GAMESTATE?this.gameStateReceived(t.gameState):this.log.logError(`Unknown message received: ${t}`)}))}get tickMs(){return this._tickMs}set tickMs(t){this._tickMs=t}get currentTick(){return this._currentTick}start(t){return this._startTime=b(),this._currentTick=0,t&&(this._gameState=t),this._startTime}tickBasedOnTime(){return Math.floor((b()-this._startTime)/this._tickMs)}tickTime(t){return this._startTime+t*this.tickMs}}class Z extends Q{constructor(){super(...arguments),e(this,"localCommandTick",-1),e(this,"lastTickReturned",-1)}tick(){let t=null;return this.lastTickReturned<this._currentTick&&this._gameState&&(this.lastTickReturned=this._currentTick,this.log.logInfo(K.toString(this._gameState)),t=K.toLog(this._gameState)),t}localCommandReceived(t,e){if(this.localCommandTick<this._currentTick){this.localCommandTick=this._currentTick;const i=new O(this._currentTick,t,e);this.log.logInfo(`sending local command: ${M.toFullString(i)}`),this.net.broadcast(new F(i))}}remoteCommandReceived(t){throw new Error("CSLockstepClientNetCode: does not support receiving remote commands")}gameStateReceived(t){this.log.logInfo(`received gamestate: ${K.toLog(this._gameState)}`),t.tick<this._currentTick?this.log.logInfo(`ignoring old gamestate: ${t.tick}`):(this._gameState=t,this._currentTick=t.tick)}getGameStateToRender(){return this._gameState}getGameState(t){return this._gameState.tick===t?this._gameState:null}}class tt extends Q{constructor(){super(...arguments),e(this,"initialGameStateSent",!1),e(this,"remoteCommands",[])}tick(){let t=null;if(!this.initialGameStateSent){this.initialGameStateSent=!0;const e=J.buildSimpleGameState(this._gameState);this.log.logInfo(`sending gamestate: ${K.toLog(e)}`),this.net.broadcast(new H(e)),t=J.toLog(this._gameState)}if(this.tickBasedOnTime()>this._currentTick){let e=0;const i=this.remoteCommands.length;for(let t=0;t<i;t++){let i=this.remoteCommands[t];i&&i.tick===this._gameState.tick&&(this._gameState.commands.push(i),this.remoteCommands.splice(t-e++,1))}if(this._gameState.commands.length<this.net.connectionCount)this.log.logWarn(`Waiting commands for tick ${this._currentTick}: ${this._gameState.commands.length} of ${this.net.connectionCount}`);else{this._gameState.commands.sort(((t,e)=>t.playerId>e.playerId?1:-1)),this.log.logInfo(J.toString(this._gameState)),t=J.toLog(this._gameState),this.gameStateMachine.compute(this._gameState),this._currentTick++,J.incTick(this._gameState),J.clearCommands(this._gameState);const e=J.buildSimpleGameState(this._gameState);this.log.logInfo(`sending gamestate: ${K.toLog(e)}`),this.net.broadcast(new H(e))}}return t}localCommandReceived(t,e){throw new Error("CSLockstepServerNetCode: does not support receiving local commands")}remoteCommandReceived(t){this.log.logInfo(`received command: ${M.toFullString(t)}`),this.remoteCommands.push(t)}gameStateReceived(t){throw new Error("CSLockstepServerNetCode: does not support receiving game states")}getGameStateToRender(){return this._gameState}getGameState(t){return this._gameState.tick===t?this._gameState:null}}class et extends Q{constructor(){super(...arguments),e(this,"localCommand"),e(this,"localCommandDumped",!1),e(this,"remoteCommands",[])}start(t){return super.start(t)}tick(){let t=null;if(this.tickBasedOnTime()>this._currentTick){!this.localCommandDumped&&this.localCommand&&(this.localCommandDumped=!0,this._gameState.commands.push(this.localCommand));let e=0;const i=this.remoteCommands.length;for(let t=0;t<i;t++){let i=this.remoteCommands[t];i&&i.tick===this._gameState.tick&&(this._gameState.commands.push(i),this.remoteCommands.splice(t-e++,1))}this._gameState.commands.length<this.net.connectionCount+1?this.log.logWarn(`Waiting commands for tick ${this._currentTick}: ${this._gameState.commands.length} of ${this.net.connectionCount+1}`):(this._gameState.commands.sort(((t,e)=>t.playerId>e.playerId?1:-1)),this.log.logInfo(J.toString(this._gameState)),t=J.toLog(this._gameState),this.gameStateMachine.compute(this._gameState),this._currentTick++,J.incTick(this._gameState),J.clearCommands(this._gameState),this.localCommand=void 0,this.localCommandDumped=!1)}return t}localCommandReceived(t,e){if(!this.localCommand){const i=new O(this._currentTick,t,e);this.localCommand=i,this.log.logInfo(`sending local command: ${M.toFullString(i)}`),this.net.broadcast(new F(i))}}remoteCommandReceived(t){this.log.logInfo(`received command: ${M.toFullString(t)}`),this.remoteCommands.push(t)}gameStateReceived(t){throw new Error("P2PNaiveNetCode: Method not implemented.")}getGameStateToRender(){return this._gameState}getGameState(t){return this._gameState.tick===t?this._gameState:null}}class it extends Q{constructor(){super(...arguments),e(this,"localCommand"),e(this,"localCommandDumped",!1),e(this,"remoteCommands",[]),e(this,"prevGameState")}start(t){return this.prevGameState=t,super.start(t)}tick(){let t=null;if(this.tickBasedOnTime()>this._currentTick){!this.localCommandDumped&&this.localCommand&&(this.localCommandDumped=!0,this._gameState.commands.push(this.localCommand));let e=0;const i=this.remoteCommands.length;for(let t=0;t<i;t++){let i=this.remoteCommands[t];i&&i.tick===this._gameState.tick&&(this._gameState.commands.push(i),this.remoteCommands.splice(t-e++,1))}this._gameState.commands.length<this.net.connectionCount+1?this.log.logWarn(`Waiting commands for tick ${this._currentTick}: ${this._gameState.commands.length} of ${this.net.connectionCount+1}`):(this._gameState.commands.sort(((t,e)=>t.playerId>e.playerId?1:-1)),this.log.logInfo(J.toString(this._gameState)),t=J.toLog(this._gameState),this.prevGameState=J.clone(this._gameState),this.gameStateMachine.compute(this._gameState),this._currentTick++,J.incTick(this._gameState),J.clearCommands(this._gameState),this.localCommand=void 0,this.localCommandDumped=!1)}return t}localCommandReceived(t,e){if(!this.localCommand){const i=new O(this._currentTick,t,e);this.localCommand=i,this.log.logInfo(`sending local command: ${M.toFullString(i)}`),this.net.broadcast(new F(i))}}remoteCommandReceived(t){this.log.logInfo(`received command: ${M.toFullString(t)}`),this.remoteCommands.push(t)}gameStateReceived(t){throw new Error("P2PDelayedNetCode: Method not implemented.")}getGameStateToRender(){return this.prevGameState?this.prevGameState:this._gameState}getGameState(t){return this._gameState.tick===t?this._gameState:this.prevGameState&&this.prevGameState.tick===t?this.prevGameState:null}}class st{constructor(){}static build(t,e,i,s){switch(t){case"p2p-naive":return e.logInfo("Using p2p-naive netcode"),new et(e,i,s);case"p2p-delayed":return e.logInfo("Using p2p-delayed netcode"),new it(e,i,s);case"cs-lockstep-client":return e.logInfo("Using cs-lockstep-client netcode"),new Z(e,i,s);case"cs-lockstep-server":return e.logInfo("Using cs-lockstep-server netcode"),new tt(e,i,s);default:return e.logInfo(`Netcode ${t} not found`),null}}static buildFromClass(t,e,i,s){return new t(e,i,s)}}class ot{constructor(t,i,s){e(this,"context"),e(this,"_debugBoxes",!0),this.log=t,this.canvas=i,this.netcode=s;const o=i.getContext("2d");if(!o)throw"Error getting context 2d";this.context=o}get debugBoxes(){return this._debugBoxes}set debugBoxes(t){this._debugBoxes=t}}class nt{constructor(t,e,i,s,o,n,a,r){this.currentTime=t,this.currentGameState=e,this.currentGameStateTime=i,this.elapsed=s,this.nextGameState=o,this.nextGameStateTime=n,this.nextElapsed=a,this.tickTimeDiff=r}}class at extends ot{constructor(t,e,i){super(t,e,i),this.log=t,this.canvas=e,this.netcode=i}render(t){t?this.renderWithInterpolation():this.renderAsIs()}renderAsIs(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height);for(let t=this.netcode.getGameStateToRender().world.getBodyList();t;t=t.getNext())t.getUserData()&&(t.isStatic()?this.drawStaticBody(t):this.drawDynamicBody(t))}renderWithInterpolation(){let t=b();const e=this.netcode.getGameStateToRender(),i=this.netcode.tickTime(e.tick),s=this.netcode.getGameState(e.tick+1),o=s?this.netcode.tickTime(s.tick):void 0;o&&(t-=o-i),t>i+this.netcode.tickMs&&(t=i+this.netcode.tickMs);const n=new nt(t,e,i,(t-i)/1e3,s,s?this.netcode.tickTime(s.tick):void 0,o?(t-o)/1e3:0,o?(o-i)/1e3:this.netcode.tickMs/1e3);this.context.clearRect(0,0,this.canvas.width,this.canvas.height);for(let a=e.world.getBodyList();a;a=a.getNext())a.getUserData()&&(a.isStatic()?this.drawStaticBody(a):this.drawDynamicBodyWithInterpolation(a,n))}drawStaticBody(t){let e=t.getUserData().width,i=t.getUserData().height;this.context.fillStyle=E.border.color,this.context.fillRect(t.getPosition().x*E.physics.worldScale-e/2,t.getPosition().y*E.physics.worldScale-i/2,e,i)}drawDynamicBody(t){let e=t.getUserData();this.context.fillStyle=e.color,this.context.fillRect(t.getPosition().x*E.physics.worldScale-e.size/2,t.getPosition().y*E.physics.worldScale-e.size/2,e.size,e.size)}drawDynamicBodyWithInterpolation(t,e){let i,s,o,n=t.getUserData(),a=0,r=0;if(e.nextGameState){if(i=J.bodyFromPlayer(e.nextGameState,t.getUserData().id),i){const s=t.getPosition(),o=i.getPosition(),n=t.getLinearVelocity(),l=i.getLinearVelocity();a=Math.sign(n.x)===Math.sign(l.x)?s.x+e.elapsed*(o.x-s.x)/e.tickTimeDiff:e.elapsed<-e.nextElapsed?s.x+n.x*e.elapsed:o.x+l.x*e.nextElapsed,r=Math.sign(n.y)===Math.sign(l.y)?s.y+e.elapsed*(o.y-s.y)/e.tickTimeDiff:e.elapsed<-e.nextElapsed?s.y+n.y*e.elapsed:o.y+l.y*e.nextElapsed}}else a=t.getPosition().x+t.getLinearVelocity().x*e.elapsed,r=t.getPosition().y+t.getLinearVelocity().y*e.elapsed;this._debugBoxes&&(s=t.getPosition().x*E.physics.worldScale-n.size/2,o=t.getPosition().y*E.physics.worldScale-n.size/2,this.context.beginPath(),this.context.rect(s,o,n.size,n.size),this.context.strokeStyle="red",this.context.stroke(),i&&(s=i.getPosition().x*E.physics.worldScale-n.size/2,o=i.getPosition().y*E.physics.worldScale-n.size/2,this.context.beginPath(),this.context.rect(s,o,n.size,n.size),this.context.strokeStyle="blue",this.context.stroke())),s=a*E.physics.worldScale-n.size/2,o=r*E.physics.worldScale-n.size/2,this.context.fillStyle=n.color,this.context.fillRect(s,o,n.size,n.size)}}class rt{constructor(t,e,i,s,o,n,a,r){this.currentTime=t,this.currentGameState=e,this.currentGameStateTime=i,this.elapsed=s,this.nextGameState=o,this.nextGameStateTime=n,this.nextElapsed=a,this.tickTimeDiff=r}}class lt extends ot{constructor(t,e,i){super(t,e,i),this.log=t,this.canvas=e,this.netcode=i}render(t){t?this.renderWithInterpolation():this.renderAsIs()}renderAsIs(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height);this.netcode.getGameStateToRender().bodies.forEach((t=>{t.isStatic?this.drawStaticBody(t):this.drawDynamicBody(t)}))}renderWithInterpolation(){let t=b();const e=this.netcode.getGameStateToRender();if(!e)return;const i=this.netcode.tickTime(e.tick),s=this.netcode.getGameState(e.tick+1),o=s?this.netcode.tickTime(s.tick):void 0;o&&(t-=o-i),t>i+this.netcode.tickMs&&(t=i+this.netcode.tickMs);const n=new rt(t,e,i,(t-i)/1e3,s,s?this.netcode.tickTime(s.tick):void 0,o?(t-o)/1e3:0,o?(o-i)/1e3:this.netcode.tickMs/1e3);this.context.clearRect(0,0,this.canvas.width,this.canvas.height),e.bodies.forEach((t=>{t.isStatic?this.drawStaticBody(t):this.drawDynamicBodyWithInterpolation(t,n)}))}drawStaticBody(t){this.context.fillStyle=t.color,this.context.fillRect(t.posX*E.physics.worldScale-t.width/2,t.posY*E.physics.worldScale-t.height/2,t.width,t.height)}drawDynamicBody(t){this.context.fillStyle=t.color,this.context.fillRect(t.posX*E.physics.worldScale-t.width/2,t.posY*E.physics.worldScale-t.height/2,t.width,t.height)}drawDynamicBodyWithInterpolation(t,e){let i,s,o,n=0,a=0;e.nextGameState?(i=K.bodyFromPlayer(e.nextGameState,t.id),i&&(n=Math.sign(t.velX)===Math.sign(i.velX)?t.posX+e.elapsed*(i.posX-t.posX)/e.tickTimeDiff:e.elapsed<-e.nextElapsed?t.posX+t.velX*e.elapsed:i.posX+i.velX*e.nextElapsed,a=Math.sign(t.velY)===Math.sign(i.velY)?t.posY+e.elapsed*(i.posY-t.posY)/e.tickTimeDiff:e.elapsed<-e.nextElapsed?t.posY+t.velY*e.elapsed:i.posY+i.velY*e.nextElapsed)):(n=t.posX+t.velX*e.elapsed,a=t.posY+t.velY*e.elapsed),this._debugBoxes&&(s=t.posX*E.physics.worldScale-t.width/2,o=t.posY*E.physics.worldScale-t.height/2,this.context.beginPath(),this.context.rect(s,o,t.width,t.height),this.context.strokeStyle="red",this.context.stroke(),i&&(s=i.posX*E.physics.worldScale-i.width/2,o=i.posY*E.physics.worldScale-i.height/2,this.context.beginPath(),this.context.rect(s,o,i.width,i.height),this.context.strokeStyle="blue",this.context.stroke())),s=n*E.physics.worldScale-t.width/2,o=a*E.physics.worldScale-t.height/2,this.context.fillStyle=t.color,this.context.fillRect(s,o,t.width,t.height)}}class ct{constructor(t,e,i,s,o){this.log=t,this.step=e,this.canvasWidth=i,this.canvasHeight=s,this.npcs=o}buildInitialGameState(){const t=this.createPlanckWorld(),e=J.extractBodies(t);return new q(0,[],t,e)}compute(t){const e=t;for(let i of e.commands){if(!i||i.value===f)continue;const t=e.bodies.find((t=>(t.getUserData()?t.getUserData().id:-1)==i.playerId));if(t){const e=i.value==v||i.value==_||i.value==k?E.physics.strength:i.value==S||i.value==x||i.value==w?-1*E.physics.strength:0,s=i.value==y||i.value==x||i.value==_?E.physics.strength:i.value==u||i.value==w||i.value==k?-1*E.physics.strength:0;this.log.logInfo(`apply command value ${i.value} to P${i.playerId}: force(x=${e} y=${s})`),t.applyForce(o.Vec2(e,s),t.getWorldCenter())}}e.world.step(this.step),e.world.clearForces()}createPlanckStaticBody(t,e,i,s,n){const a=t.createBody({type:"static"});a.setUserData({width:s,height:n}),a.createFixture(o.Box(s/2/E.physics.worldScale,n/2/E.physics.worldScale)),a.setPosition(o.Vec2((e+s/2)/E.physics.worldScale,(i+n/2)/E.physics.worldScale))}createPlanckWorld(){const t=o.Vec2(0,0),e=o.World(t);this.createPlanckStaticBody(e,0,0,this.canvasWidth,E.physics.borderThickness),this.createPlanckStaticBody(e,0,this.canvasHeight-E.physics.borderThickness,this.canvasWidth,E.physics.borderThickness),this.createPlanckStaticBody(e,0,0,E.physics.borderThickness,this.canvasHeight),this.createPlanckStaticBody(e,this.canvasWidth-E.physics.borderThickness,0,E.physics.borderThickness,this.canvasHeight);const i={density:0,restitution:.4};E.players.forEach((t=>{const s=e.createBody({type:"dynamic",position:o.Vec2((t.x+t.size/2)/E.physics.worldScale,(t.y+t.size/2)/E.physics.worldScale),allowSleep:!1,awake:!0});s.createFixture(o.Box(t.size/2/E.physics.worldScale,t.size/2/E.physics.worldScale),i),s.setUserData(t)}));const s={density:0,restitution:1};let n=20;for(let a=0;a<this.npcs;a++){const t=e.createBody({type:"dynamic",position:o.Vec2((35+a*n+10+8*(10-this.npcs))/E.physics.worldScale,(35+a*n+10+8*(10-this.npcs))/E.physics.worldScale),allowSleep:!1,awake:!0});t.createFixture(o.Box(10/E.physics.worldScale,10/E.physics.worldScale),s),t.setUserData({id:100+a,size:n,color:E.npc.color})}return e}}class ht{constructor(){}buildInitialGameState(){return new V(0,[],[])}compute(t){}}class mt{constructor(){e(this,"encoder",new TextEncoder),e(this,"decoder",new TextDecoder)}encode(t){return this.encoder.encode(JSON.stringify(t))}decode(t){return JSON.parse(this.decoder.decode(t))}}class dt{encode(t){return n(t)}decode(t){return a(new Uint8Array(t))}}class pt{encode(t){return r(t)}decode(t){return l(new Uint8Array(t))}}class gt{constructor(){}static build(t,e){switch(t){case"json":return e.logInfo("Using json serializer"),new mt;case"cbor-x":return e.logInfo("Using cbor-x serializer"),new dt;case"msgpackr":return e.logInfo("Using msgpackr serializer"),new pt;default:return e.logInfo(`Serializer ${t} not found. Fallback to json serializer`),new mt}}}class ft{constructor(t,i,s){e(this,"running",!1),e(this,"_log"),e(this,"_gameStateHistory"),e(this,"_networkInterface"),e(this,"_deviceUpdatedEmitter",new C),e(this,"netcode"),e(this,"gameStateMachine"),e(this,"renderer"),e(this,"_npcs",0),e(this,"_interpolation",!0),this.isServer=t,this.playerId=i,this.canvas=s,this._log=new G,this._networkInterface=new B(this._log),this._gameStateHistory=[]}get log(){return this._log}get trafficLog(){return this._networkInterface.trafficLog}get deviceUpdatedEmitter(){return this._deviceUpdatedEmitter}get gameStateHistory(){return this._gameStateHistory}get interpolation(){return this._interpolation}set interpolation(t){this._interpolation=t}get debugBoxes(){return this.renderer.debugBoxes}set debugBoxes(t){this.renderer.debugBoxes=t}connect(t,e,i,s,o,n,a,r){const l=new R(this._networkInterface,this.playerId,this._log,gt.build(e,this.log));l.minLatency=i,l.maxLatency=s,l.packetLoss=o;const c=new R(t._networkInterface,t.playerId,t._log,gt.build(e,t.log));c.minLatency=n,c.maxLatency=a,c.packetLoss=r,this._networkInterface.connect(l,c),t._networkInterface.connect(c,l)}reset(){this._log.clear(),this._gameStateHistory=[]}play(t,e,i,s,o,n,a){let r;if(this.gameStateMachine=o?new ct(this._log,i/1e3,this.canvas.width,this.canvas.height,this._npcs):new ht,null===e){const e=t.name+("cs"===t.type?this.isServer?"-server":"-client":"");r=st.build(e,this._log,this._networkInterface,this.gameStateMachine)}else r=st.buildFromClass(e,this.log,this._networkInterface,this.gameStateMachine);if(null===r)return;this.netcode=r,this.netcode.tickMs=i,this._npcs=s,this._interpolation=n;const l=this.gameStateMachine.buildInitialGameState();this.renderer=o?new at(this.log,this.canvas,this.netcode):new lt(this.log,this.canvas,this.netcode),this.renderer.debugBoxes=a,this.netcode.start(l),this.running=!0,window.requestAnimationFrame((()=>{this.gameLoop()}))}stop(){this.running=!1,this._networkInterface.removeListeners(),this._networkInterface.closeConnections(),this._networkInterface.trafficLog.flush(),this._networkInterface.trafficLog.removeListeners()}gameStateHistoryLog(){const t=this._gameStateHistory.reverse().join("\n");return this._gameStateHistory.reverse(),t}gameLoop(){this.running&&(window.requestAnimationFrame((()=>{this.gameLoop()})),this.update(),this.draw())}update(){try{let t=this.netcode.tick();null!=t&&this._gameStateHistory.unshift(t)}catch(t){this._log.logError(t)}this._deviceUpdatedEmitter.notify()}draw(){this.renderer.render(this._interpolation)}}const ut=new class{constructor(){e(this,"pressedKeys",[]),document.onkeydown=document.onkeyup=t=>{this.pressedKeys[t.keyCode]="keydown"===t.type}}isPressed(t){return this.pressedKeys[t]}};class yt extends ft{constructor(t,e,i,s,o,n){super(!1,t,n),this.playerId=t,this.keyUp=e,this.keyDown=i,this.keyLeft=s,this.keyRight=o,this.canvas=n}update(){const t=(ut.isPressed(this.keyUp)?u:ut.isPressed(this.keyDown)?y:f)+(ut.isPressed(this.keyLeft)?S:ut.isPressed(this.keyRight)?v:f);this.netcode.localCommandReceived(this.playerId,t),super.update()}}class St extends ft{constructor(t,e){super(!0,t,e),this.playerId=t,this.canvas=e}}(new class{constructor(){e(this,"deviceServer"),e(this,"devicePlayer1"),e(this,"devicePlayer2"),e(this,"p2pmode",!0),e(this,"panelControl"),e(this,"panelCanvas1"),e(this,"panelGamestates1"),e(this,"panelLog1"),e(this,"panelCanvas2"),e(this,"panelGamestates2"),e(this,"panelLog2"),e(this,"panelCanvasS"),e(this,"panelGamestatesS"),e(this,"panelLogS"),e(this,"panelTrafficChart"),e(this,"uplotChartPanel"),this.deviceServer=new St(0,document.getElementById("serverGameArea")),this.devicePlayer1=new yt(E.players[0].id,E.players[0].keyUp,E.players[0].keyDown,E.players[0].keyLeft,E.players[0].keyRight,document.getElementById("player1GameArea")),this.devicePlayer2=new yt(E.players[1].id,E.players[1].keyUp,E.players[1].keyDown,E.players[1].keyLeft,E.players[1].keyRight,document.getElementById("player2GameArea"))}build(){this.createWindows(),this.bootstrapAngular()}createWindows(){this.panelControl=c.create({id:"panelControl",headerTitle:"Control Panel",theme:"dimgrey",headerControls:{close:"remove",size:"xs"},panelSize:{width:"18em",height:"100%"},position:{my:"left-top",at:"left-top",offsetX:"0",offsetY:"0"},content:document.getElementById("controlPanel")}),this.panelGamestates1=c.create({id:"panelGamestates1",headerTitle:"Player 1 Game States",theme:"DarkSlateBlue",contentOverflow:"auto",headerControls:{close:"remove",size:"xs"},resizeit:{handles:"n,s"},panelSize:{width:"22em",height:"50%"},position:{my:"left-top",at:"left-top",offsetX:"calc(100vw - 22em)",offsetY:"0"},content:document.getElementById("player1GameStates")}),this.panelCanvas1=c.create({id:"panelCanvas1",headerTitle:"Player 1 Canvas",theme:"DarkSlateBlue",contentOverflow:"hide",headerControls:{close:"remove",size:"xs"},panelSize:{width:"310px",height:"calc(250px + 4.5em)"},position:{my:"left-top",at:"left-top",offsetX:"calc(18em + (100vw - 40em - 620px) / 3)",offsetY:"0"},content:document.getElementById("player1Canvas")}),this.panelLog1=c.create({id:"panelLog1",headerTitle:"Player 1 Logs",theme:"DarkSlateBlue",contentOverflow:"auto",headerControls:{close:"remove",size:"xs"},panelSize:{width:"calc(100vw - 40em)",height:"calc((100vh - 250px - 4.5em) / 2)"},position:{my:"left-top",at:"left-top",offsetX:"18em",offsetY:"calc(250px + 4.5em)"},content:document.getElementById("player1Logs")}),this.panelGamestates2=c.create({id:"panelGamestates2",headerTitle:"Player 2 Game States",theme:"OliveDrab",contentOverflow:"auto",headerControls:{close:"remove",size:"xs"},panelSize:{width:"350px",height:"50%"},position:{my:"left-top",at:"left-top",offsetX:"calc(100vw - 22em)",offsetY:"50%"},content:document.getElementById("player2GameStates")}),this.panelCanvas2=c.create({id:"panelCanvas2",headerTitle:"Player 2 Canvas",theme:"OliveDrab",contentOverflow:"hide",headerControls:{close:"remove",size:"xs"},panelSize:{width:"310px",height:"calc(250px + 4.5em)"},position:{my:"left-top",at:"left-top",offsetX:"calc(100vw - 22em - 310px - (100vw - 40em - 620px) / 3)",offsetY:"0"},content:document.getElementById("player2Canvas")}),this.panelLog2=c.create({id:"panelLog2",headerTitle:"Player 2 Logs",theme:"OliveDrab",contentOverflow:"auto",headerControls:{close:"remove",size:"xs"},panelSize:{width:"calc(100vw - 40em)",height:"calc((100vh - 250px - 4.5em) / 2)"},position:{my:"left-top",at:"left-top",offsetX:"18em",offsetY:"calc(250px + 4.5em + (100vh - 250px - 4.5em) / 2)"},content:document.getElementById("player2Logs")}),this.panelGamestatesS=c.create({id:"panelGamestatesS",headerTitle:"Server Game States",theme:"black",contentOverflow:"auto",headerControls:{close:"remove",size:"xs"},panelSize:{width:"350px",height:"50%"},position:{my:"left-top",at:"left-top",offsetX:"calc(100vw - 350px)",offsetY:"50%"},content:document.getElementById("serverGameStates")}),this.panelCanvasS=c.create({id:"panelCanvasS",headerTitle:'Server "Canvas"',theme:"black",contentOverflow:"hide",headerControls:{close:"remove",size:"xs"},panelSize:{width:"310px",height:"calc(250px + 4.5em)"},position:{my:"left-top",at:"left-top",offsetX:"calc(50vw + 350px)",offsetY:"0"},content:document.getElementById("serverCanvas")}),this.panelLogS=c.create({id:"panelLogS",headerTitle:"Server Logs",theme:"black",contentOverflow:"auto",headerControls:{close:"remove",size:"xs"},panelSize:{width:"calc(100vw - 40em)",height:"calc((100vh - 250px - 4.5em) / 2)"},position:{my:"left-top",at:"left-top",offsetX:"350px",offsetY:"75%"},content:document.getElementById("serverLogs")}),this.panelTrafficChart=c.create({id:"panelTrafficChart",headerTitle:"Network Traffic",theme:"dimgrey",contentOverflow:"auto",headerControls:{close:"remove",size:"xs"},panelSize:{width:"calc(100vw - 25em)",height:"calc(100vh - 250px - 4.5em)"},position:{my:"left-top",at:"left-top",offsetX:"1000vw",offsetY:"1000vh"},content:document.getElementById("trafficChart")}),this.uplotChartPanel=document.querySelector("#panelTrafficChart > div.jsPanel-content")}resetLayout(){this.panelControl.reposition({my:"left-top",at:"left-top",offsetX:"0",offsetY:"0"}),this.panelControl.resize({width:"18em",height:"100%"}),this.p2pmode?(this.panelGamestates1.reposition({my:"left-top",at:"left-top",offsetX:"calc(100vw - 22em)",offsetY:"0"}),this.panelGamestates1.resize({width:"22em",height:"50%"}),this.panelCanvas1.reposition({my:"left-top",at:"left-top",offsetX:"calc(18em + (100vw - 40em - 620px) / 3)",offsetY:"0"}),this.panelCanvas1.resize({width:"310px",height:"calc(250px + 4.5em)"}),this.panelLog1.reposition({my:"left-top",at:"left-top",offsetX:"18em",offsetY:"calc(250px + 4.5em)"}),this.panelLog1.resize({width:"calc(100vw - 40em)",height:"calc((100vh - 250px - 4.5em) / 2)"}),this.panelGamestates2.reposition({my:"left-top",at:"left-top",offsetX:"calc(100vw - 22em)",offsetY:"50%"}),this.panelGamestates2.resize({width:"22em",height:"50%"}),this.panelCanvas2.reposition({my:"left-top",at:"left-top",offsetX:"calc(100vw - 22em - 310px - (100vw - 40em - 620px) / 3)",offsetY:"0"}),this.panelCanvas2.resize({width:"310px",height:"calc(250px + 4.5em)"}),this.panelLog2.reposition({my:"left-top",at:"left-top",offsetX:"18em",offsetY:"calc(250px + 4.5em + (100vh - 250px - 4.5em) / 2)"}),this.panelLog2.resize({width:"calc(100vw - 40em)",height:"calc((100vh - 250px - 4.5em) / 2)"}),this.panelGamestatesS.reposition({my:"left-top",at:"left-top",offsetX:"1000vw",offsetY:"1000vh"}),this.panelCanvasS.reposition({my:"left-top",at:"left-top",offsetX:"1000vw",offsetY:"1000vh"}),this.panelLogS.reposition({my:"left-top",at:"left-top",offsetX:"1000vw",offsetY:"1000vh"})):(this.panelGamestates1.reposition({my:"left-top",at:"left-top",offsetX:"calc(100vw - 22em)",offsetY:"0"}),this.panelGamestates1.resize({width:"22em",height:"33%"}),this.panelCanvas1.reposition({my:"left-top",at:"left-top",offsetX:"18em",offsetY:"0"}),this.panelCanvas1.resize({width:"310px",height:"calc(250px + 4.5em)"}),this.panelLog1.reposition({my:"left-top",at:"left-top",offsetX:"18em",offsetY:"calc(250px + 4.5em)"}),this.panelLog1.resize({width:"calc(100vw - 40em - 4em)",height:"calc(100vh - 250px - 4.5em - 4em)"}),this.panelGamestates2.reposition({my:"left-top",at:"left-top",offsetX:"calc(100vw - 22em)",offsetY:"33%"}),this.panelGamestates2.resize({width:"22em",height:"33%"}),this.panelCanvas2.reposition({my:"left-top",at:"left-top",offsetX:"calc(18em + 310px)",offsetY:"0"}),this.panelCanvas2.resize({width:"310px",height:"calc(250px + 4.5em)"}),this.panelLog2.reposition({my:"left-top",at:"left-top",offsetX:"20em",offsetY:"calc(250px + 4.5em + 2em)"}),this.panelLog2.resize({width:"calc(100vw - 40em - 4em)",height:"calc(100vh - 250px - 4.5em - 4em)"}),this.panelGamestatesS.reposition({my:"left-top",at:"left-top",offsetX:"calc(100vw - 22em)",offsetY:"66%"}),this.panelGamestatesS.resize({width:"22em",height:"33%"}),this.panelCanvasS.reposition({my:"left-top",at:"left-top",offsetX:"calc(18em + 620px)",offsetY:"0"}),this.panelCanvasS.resize({width:"310px",height:"calc(250px + 4.5em)"}),this.panelLogS.reposition({my:"left-top",at:"left-top",offsetX:"22em",offsetY:"calc(250px + 4.5em + 4em)"}),this.panelLogS.resize({width:"calc(100vw - 40em - 4em)",height:"calc(100vh - 250px - 4.5em - 4em)"})),this.panelGamestates1.front(),this.panelGamestates2.front(),this.panelGamestatesS.front(),this.panelLog1.front(),this.panelLog2.front(),this.panelLogS.front(),this.panelCanvas1.front(),this.panelCanvas2.front(),this.panelCanvasS.front()}saveFile(t,e){const i=new Date,s=h.exports.createWriteStream(`${i.getFullYear()}${i.getMonth()}${i.getDate()}${i.getHours()}${i.getMinutes()}${i.getSeconds()}-${t}.log`).getWriter(),o=(new TextEncoder).encode(e);s.write(o),s.close()}showError(t,e){c.create({dragit:!1,resizeit:!1,headerControls:"closeonly  xs",position:"center-top 0 15 down",contentSize:"330 auto",content:`<p>${e}</p>`,theme:"warning filled",headerTitle:`${t}`})}bootstrapAngular(){m.module("app",[]).controller("mainCtrl",["$scope","$timeout",(t,e)=>{t.info={showSpinner:!1,btnStopEnabled:!1,btnPlayEnabled:!0,btnSaveEnabled:!0,playing:!1,tick:E.network.tickMs,netcodes:E.netcodes,algorithm:E.netcodes[0],serializers:E.serializers,serializer:E.serializers[0],latency1:{min:E.network.minLatency1,max:E.network.maxLatency1},packetLoss1:E.network.packetLoss1,latency2:{min:E.network.minLatency2,max:E.network.maxLatency2},packetLoss2:E.network.packetLoss2,npcs:0,realtimeGameStates:!0,realtimeLogs:!1,interpolation:!0,debugBoxes:!0,syncScrollGs1:!0,syncScrollGs2:!0,syncScrollGsS:!0,syncScrollLog1:!0,syncScrollLog2:!0,syncScrollLogS:!0,logsPlayer1:[],logsPlayer2:[],logsServer:[],gamestatesPlayer1:[],gamestatesPlayer2:[],gamestatesServer:[],uplot:void 0,uplotP2POpts:{width:this.uplotChartPanel.clientWidth,height:this.uplotChartPanel.clientHeight-50,pxAlign:0,scales:{x:{time:!1}},series:[{label:"(sec)"},{label:"P1 In",stroke:"#483D8B"},{label:"P1 Out",stroke:"blue"},{label:"P2 In",stroke:"#6B8E23"},{label:"P2 Out",stroke:"green"}]},uplotCSOpts:{width:this.uplotChartPanel.clientWidth,height:this.uplotChartPanel.clientHeight-50,pxAlign:0,scales:{x:{time:!1}},series:[{label:"(sec)"},{label:"P1 In",stroke:"#483D8B"},{label:"P1 Out",stroke:"blue"},{label:"P2 In",stroke:"#6B8E23"},{label:"P2 Out",stroke:"green"},{label:"SRV In",stroke:"black"},{label:"SRV Out",stroke:"gray"}]},uplotData:[]};const i="p2p"===t.info.algorithm.type;this.p2pmode=i,this.resetLayout(),t.resetLayout=()=>{this.resetLayout()};const s=document.getElementById("player1GameStates"),o=document.getElementById("player2GameStates"),n=document.getElementById("serverGameStates");m.element(s.parentElement).bind("scroll",(()=>{t.info.syncScrollGs1&&(t.info.syncScrollGs2&&(o.parentElement.scrollTop=s.parentElement.scrollTop),t.info.syncScrollGsS&&(n.parentElement.scrollTop=s.parentElement.scrollTop))})),m.element(o.parentElement).bind("scroll",(()=>{t.info.syncScrollGs2&&(t.info.syncScrollGs1&&(s.parentElement.scrollTop=o.parentElement.scrollTop),t.info.syncScrollGsS&&(n.parentElement.scrollTop=o.parentElement.scrollTop))})),m.element(n.parentElement).bind("scroll",(()=>{t.info.syncScrollGsS&&(t.info.syncScrollGs1&&(s.parentElement.scrollTop=n.parentElement.scrollTop),t.info.syncScrollGs2&&(o.parentElement.scrollTop=n.parentElement.scrollTop))}));const a=document.getElementById("player1Logs"),r=document.getElementById("player2Logs"),l=document.getElementById("serverLogs");m.element(a.parentElement).bind("scroll",(()=>{t.info.syncScrollLog1&&(t.info.syncScrollLog2&&(r.parentElement.scrollTop=a.parentElement.scrollTop),t.info.syncScrollLogS&&(l.parentElement.scrollTop=a.parentElement.scrollTop))})),m.element(r.parentElement).bind("scroll",(()=>{t.info.syncScrollLog2&&(t.info.syncScrollLog1&&(a.parentElement.scrollTop=r.parentElement.scrollTop),t.info.syncScrollLogS&&(l.parentElement.scrollTop=r.parentElement.scrollTop))})),m.element(l.parentElement).bind("scroll",(()=>{t.info.syncScrollLogS&&(t.info.syncScrollLog1&&(a.parentElement.scrollTop=l.parentElement.scrollTop),t.info.syncScrollLog2&&(r.parentElement.scrollTop=l.parentElement.scrollTop))})),this.deviceServer.deviceUpdatedEmitter.addEventListener((()=>{(t.info.realtimeGameStates||t.info.realtimeLogs)&&t.$apply()})),this.devicePlayer1.deviceUpdatedEmitter.addEventListener((()=>{(t.info.realtimeGameStates||t.info.realtimeLogs)&&t.$apply()})),this.devicePlayer2.deviceUpdatedEmitter.addEventListener((()=>{(t.info.realtimeGameStates||t.info.realtimeLogs)&&t.$apply()}));const c='<button class="jsPanel-btn jsPanel-btn-menu jsPanel-btn-md tooltip bottom" aria-label="Sync scroll"><span class="fas fa-arrows-alt-v toolbar-icon" style="vertical-align: text-top"></span><input type="checkbox" checked /></button>',h='<button class="jsPanel-btn jsPanel-btn-menu jsPanel-btn-md tooltip bottom" aria-label="Download"><span class="fas fa-download toolbar-icon"></span></button>';this.panelGamestates1.addControl({html:c,name:"sync",position:1,handler:()=>{t.info.syncScrollGs1=!t.info.syncScrollGs1}}),this.panelGamestates1.addControl({html:h,name:"download",position:2,handler:()=>{t.saveGamestates1()}}),this.panelGamestates2.addControl({html:c,name:"sync",position:1,handler:()=>{t.info.syncScrollGs2=!t.info.syncScrollGs2}}),this.panelGamestates2.addControl({html:h,name:"download",position:2,handler:()=>{t.saveGamestates2()}}),this.panelGamestatesS.addControl({html:c,name:"sync",position:1,handler:()=>{t.info.syncScrollGsS=!t.info.syncScrollGsS}}),this.panelGamestatesS.addControl({html:h,name:"download",position:2,handler:()=>{t.saveGamestatesS()}}),this.panelLog1.addControl({html:c,name:"sync",position:1,handler:()=>{t.info.syncScrollLog1=!t.info.syncScrollLog1}}),this.panelLog1.addControl({html:h,name:"download",position:2,handler:()=>{t.saveLogs1()}}),this.panelLog2.addControl({html:c,name:"sync",position:1,handler:()=>{t.info.syncScrollLog2=!t.info.syncScrollLog2}}),this.panelLog2.addControl({html:h,name:"download",position:2,handler:()=>{t.saveLogs2()}}),this.panelLogS.addControl({html:c,name:"sync",position:1,handler:()=>{t.info.syncScrollLogS=!t.info.syncScrollLogS}}),this.panelLogS.addControl({html:h,name:"download",position:2,handler:()=>{t.saveLogsS()}}),t.changeAlgorithm=()=>{if("custom"===t.info.algorithm.type)return;const e="p2p"===t.info.algorithm.type;e!==this.p2pmode&&(this.p2pmode=e,this.resetLayout())},document.addEventListener("jspanelresizestop",(e=>{"panelTrafficChart"===e.panel.id&&t.info.uplot.setSize({width:this.uplotChartPanel.clientWidth,height:this.uplotChartPanel.clientHeight-50})}),!1),t.showTrafficChart=()=>{t.info.uplot=new d(this.p2pmode?t.info.uplotP2POpts:t.info.uplotCSOpts,t.info.uplotData,this.uplotChartPanel),this.panelTrafficChart.reposition({my:"left-top",at:"left-top",offsetX:"23em",offsetY:"calc(250px + 4.5em)"}),this.panelTrafficChart.resize({width:"calc(100vw - 25em)",height:"calc(100vh - 250px - 4.5em)"}),this.panelTrafficChart.front()},t.stop=()=>{t.info.showSpinner=!0,e((()=>{this.deviceServer.stop(),this.devicePlayer1.stop(),this.devicePlayer2.stop(),t.info.btnStopEnabled=!1,t.info.btnPlayEnabled=!0,t.info.playing=!1,t.showTrafficChart(),e((()=>{t.info.showSpinner=!1}))}))},t.play=async()=>{if("custom"===t.info.algorithm.type){if(!t.info.algorithmUrl)return void this.showError("Loading algorithm","Empty Algorithm URL");const o=await fetch(t.info.algorithmUrl),n=await o.text();try{window.currentTimestamp=b,window.BaseNetCode=Q,window.Command=O,window.CommandMessage=F,window.GameStateMessage=H,window.CommandUtils=M,window.SimpleGameStateUtils=K,window.PlanckGameStateUtils=J;const{type:s,name:o,ClientNetCode:a,ServerNetCode:r}=await(e=()=>import(`data:text/javascript;charset=utf-8,${encodeURIComponent(n)}`),i=[],i&&0!==i.length?Promise.all(i.map((t=>{if((t=`/netcode-workbench/${t}`)in p)return;p[t]=!0;const e=t.endsWith(".css"),i=e?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${i}`))return;const s=document.createElement("link");return s.rel=e?"stylesheet":"modulepreload",e||(s.as="script",s.crossOrigin=""),s.href=t,document.head.appendChild(s),e?new Promise(((t,e)=>{s.addEventListener("load",t),s.addEventListener("error",e)})):void 0}))).then((()=>e())):e()),l=new L(o,s);this.p2pmode="p2p"===s,this.resetLayout(),this.p2pmode?t.internalPlay(l,a,null):t.internalPlay(l,a,r)}catch(s){this.showError("Loading algorithm",s)}}else t.internalPlay(t.info.algorithm,null,null);var e,i},t.internalPlay=(e,i,s)=>{this.deviceServer.reset(),this.devicePlayer1.reset(),this.devicePlayer2.reset(),t.info.uplot&&(t.info.uplot.destroy(),t.info.uplot=void 0),this.panelTrafficChart.reposition({my:"left-top",at:"left-top",offsetX:"1000vw",offsetY:"1000vh"}),t.info.uplotData=this.p2pmode?[[],[],[],[],[]]:[[],[],[],[],[],[],[]];let o=0;this.devicePlayer1.trafficLog.incomingEmitter.addEventListener((e=>{this.devicePlayer1.log.logInfo(`incoming ${e.timestamp} ${e.size} bytes`),0===o&&(o=e.timestamp);const i=e.timestamp-o,s=t.info.uplotData[0].indexOf(i);-1===s?(t.info.uplotData[0].push(i),t.info.uplotData[1].push(e.size),t.info.uplotData[2].push(0),t.info.uplotData[3].push(0),t.info.uplotData[4].push(0),this.p2pmode||(t.info.uplotData[5].push(0),t.info.uplotData[6].push(0))):t.info.uplotData[1][s]=e.size})),this.devicePlayer1.trafficLog.outgoingEmitter.addEventListener((e=>{this.devicePlayer1.log.logInfo(`outgoing ${e.timestamp} ${e.size} bytes`),0===o&&(o=e.timestamp);const i=e.timestamp-o,s=t.info.uplotData[0].indexOf(i);-1===s?(t.info.uplotData[0].push(i),t.info.uplotData[1].push(0),t.info.uplotData[2].push(e.size),t.info.uplotData[3].push(0),t.info.uplotData[4].push(0),this.p2pmode||(t.info.uplotData[5].push(0),t.info.uplotData[6].push(0))):t.info.uplotData[2][s]=e.size})),this.devicePlayer2.trafficLog.incomingEmitter.addEventListener((e=>{this.devicePlayer2.log.logInfo(`incoming ${e.timestamp} ${e.size} bytes`),0===o&&(o=e.timestamp);const i=e.timestamp-o,s=t.info.uplotData[0].indexOf(i);-1===s?(t.info.uplotData[0].push(i),t.info.uplotData[1].push(0),t.info.uplotData[2].push(0),t.info.uplotData[3].push(e.size),t.info.uplotData[4].push(0),this.p2pmode||(t.info.uplotData[5].push(0),t.info.uplotData[6].push(0))):t.info.uplotData[3][s]=e.size})),this.devicePlayer2.trafficLog.outgoingEmitter.addEventListener((e=>{this.devicePlayer2.log.logInfo(`outgoing ${e.timestamp} ${e.size} bytes`),0===o&&(o=e.timestamp);const i=e.timestamp-o,s=t.info.uplotData[0].indexOf(i);-1===s?(t.info.uplotData[0].push(i),t.info.uplotData[1].push(0),t.info.uplotData[2].push(0),t.info.uplotData[3].push(0),t.info.uplotData[4].push(e.size),this.p2pmode||(t.info.uplotData[5].push(0),t.info.uplotData[6].push(0))):t.info.uplotData[4][s]=e.size})),this.deviceServer.trafficLog.incomingEmitter.addEventListener((e=>{this.deviceServer.log.logInfo(`incoming ${e.timestamp} ${e.size} bytes`),0===o&&(o=e.timestamp);const i=e.timestamp-o,s=t.info.uplotData[0].indexOf(i);-1===s?(t.info.uplotData[0].push(i),t.info.uplotData[1].push(0),t.info.uplotData[2].push(0),t.info.uplotData[3].push(0),t.info.uplotData[4].push(0),this.p2pmode||(t.info.uplotData[5].push(e.size),t.info.uplotData[6].push(0))):t.info.uplotData[5][s]=e.size})),this.deviceServer.trafficLog.outgoingEmitter.addEventListener((e=>{this.deviceServer.log.logInfo(`outgoing ${e.timestamp} ${e.size} bytes`),0===o&&(o=e.timestamp);const i=e.timestamp-o,s=t.info.uplotData[0].indexOf(i);-1===s?(t.info.uplotData[0].push(i),t.info.uplotData[1].push(0),t.info.uplotData[2].push(0),t.info.uplotData[3].push(0),t.info.uplotData[4].push(0),this.p2pmode||(t.info.uplotData[5].push(0),t.info.uplotData[6].push(e.size))):t.info.uplotData[6][s]=e.size})),this.p2pmode?(this.devicePlayer1.connect(this.devicePlayer2,t.info.serializer.name,t.info.latency1.min,t.info.latency1.max,t.info.packetLoss1,t.info.latency2.min,t.info.latency2.max,t.info.packetLoss2),this.devicePlayer1.play(e,i,t.info.tick,t.info.npcs,!0,t.info.interpolation,t.info.debugBoxes),this.devicePlayer2.play(e,i,t.info.tick,t.info.npcs,!0,t.info.interpolation,t.info.debugBoxes)):(this.devicePlayer1.connect(this.deviceServer,t.info.serializer.name,t.info.latency1.min,t.info.latency1.max,t.info.packetLoss1,t.info.latency1.min,t.info.latency1.max,t.info.packetLoss1),this.devicePlayer2.connect(this.deviceServer,t.info.serializer.name,t.info.latency2.min,t.info.latency2.max,t.info.packetLoss2,t.info.latency2.min,t.info.latency2.max,t.info.packetLoss2),this.deviceServer.play(e,s,t.info.tick,t.info.npcs,!0,!1,!1),this.devicePlayer1.play(e,i,t.info.tick,t.info.npcs,!1,t.info.interpolation,t.info.debugBoxes),this.devicePlayer2.play(e,i,t.info.tick,t.info.npcs,!1,t.info.interpolation,t.info.debugBoxes)),t.info.btnStopEnabled=!0,t.info.btnPlayEnabled=!1,t.info.playing=!0,t.info.gamestatesServer=this.deviceServer.gameStateHistory,t.info.gamestatesPlayer1=this.devicePlayer1.gameStateHistory,t.info.gamestatesPlayer2=this.devicePlayer2.gameStateHistory,t.info.logsServer=this.deviceServer.log.traces,t.info.logsPlayer1=this.devicePlayer1.log.traces,t.info.logsPlayer2=this.devicePlayer2.log.traces},t.changeInterpolation=()=>{this.devicePlayer1.interpolation=t.info.interpolation,this.devicePlayer2.interpolation=t.info.interpolation},t.changeDebugBoxes=()=>{this.devicePlayer1.debugBoxes=t.info.debugBoxes,this.devicePlayer2.debugBoxes=t.info.debugBoxes},t.saveAll=()=>{let e=`\n--------------------\nPLAYER 1 GAME STATES\n--------------------\n${this.devicePlayer1.gameStateHistoryLog()}\n-------------\nPLAYER 1 LOGS\n-------------\n${this.devicePlayer1.log}\n\n--------------------\nPLAYER 2 GAME STATES\n--------------------\n${this.devicePlayer2.gameStateHistoryLog()}\n-------------\nPLAYER 2 LOGS\n-------------\n${this.devicePlayer2.log}`;this.p2pmode||(e+=`-----------------\nSERVER GAME STATES\n------------------\n${this.deviceServer.gameStateHistoryLog()}\n-----------\nSERVER LOGS\n-----------\n${this.deviceServer.log}`),this.saveFile(t.info.algorithm.name,e)},t.saveGamestates1=()=>{this.saveFile(`${t.info.algorithm.name}-p1-states`,this.devicePlayer1.gameStateHistoryLog())},t.saveLogs1=()=>{this.saveFile(`${t.info.algorithm.name}-p1-logs`,this.devicePlayer1.log.toString())},t.saveGamestates2=()=>{this.saveFile(`${t.info.algorithm.name}-p2-states`,this.devicePlayer2.gameStateHistoryLog())},t.saveLogs2=()=>{this.saveFile(`${t.info.algorithm.name}-p2-logs`,this.devicePlayer2.log.toString())},t.saveGamestatesS=()=>{this.saveFile(`${t.info.algorithm.name}-srv-states`,this.deviceServer.gameStateHistoryLog())},t.saveLogsS=()=>{this.saveFile(`${t.info.algorithm.name}-srv-logs`,this.deviceServer.log.toString())}}])}}).build();
